{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Bao\\\\Desktop\\\\reactjs\\\\04_cart-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport * as types from './../constants/ActionType';\nvar data = JSON.parse(localStorage.getItem('CART'));\nvar initialState = data ? data : [];\n\nvar cart = function cart() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var product = action.product,\n      quantity = action.quantity;\n  var index = -1;\n\n  switch (action.type) {\n    case types.ADD_TO_CART:\n      index = findProductID(state, product);\n\n      if (index !== -1) {\n        state[index].quantity += quantity;\n      } else {\n        state.push({\n          product: product,\n          quantity: quantity\n        });\n      }\n\n      localStorage.setItem('CART', JSON.stringify(state));\n      return _toConsumableArray(state);\n\n    case types.DELETE_PRODUCT_IN_CART:\n      index = findProductID(state, product);\n\n      if (index !== -1) {\n        state.sp;\n      }\n\n      localStorage.setItem('CART', JSON.stringify(state));\n      return _toConsumableArray(state);\n\n    default:\n      return _toConsumableArray(state);\n  }\n};\n\nvar findProductID = function findProductID(cart, product) {\n  var index = -1;\n\n  for (var i = 0; i < cart.length; i++) {\n    if (cart[i].product.id === product.id) {\n      index = i;\n    }\n  }\n\n  return index;\n};\n\nexport default cart;","map":{"version":3,"sources":["C:\\Users\\Bao\\Desktop\\reactjs\\04_cart-redux\\src\\reducers\\cart.js"],"names":["types","data","JSON","parse","localStorage","getItem","initialState","cart","state","action","product","quantity","index","type","ADD_TO_CART","findProductID","push","setItem","stringify","DELETE_PRODUCT_IN_CART","sp","i","length","id"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,2BAAvB;AAEA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAEA,IAAMM,IAAI,GAAG,SAAPA,IAAO,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;AAAA,MACrCC,OADqC,GACfD,MADe,CACrCC,OADqC;AAAA,MAC5BC,QAD4B,GACfF,MADe,CAC5BE,QAD4B;AAE3C,MAAIC,KAAK,GAAG,CAAC,CAAb;;AACA,UAAQH,MAAM,CAACI,IAAf;AACI,SAAKb,KAAK,CAACc,WAAX;AACIF,MAAAA,KAAK,GAAGG,aAAa,CAACP,KAAD,EAAQE,OAAR,CAArB;;AACA,UAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdJ,QAAAA,KAAK,CAACI,KAAD,CAAL,CAAaD,QAAb,IAAyBA,QAAzB;AACH,OAFD,MAEO;AACHH,QAAAA,KAAK,CAACQ,IAAN,CAAW;AACPN,UAAAA,OAAO,EAAPA,OADO;AAEPC,UAAAA,QAAQ,EAARA;AAFO,SAAX;AAIH;;AACDP,MAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeV,KAAf,CAA7B;AACA,gCAAWA,KAAX;;AACJ,SAAKR,KAAK,CAACmB,sBAAX;AACIP,MAAAA,KAAK,GAAGG,aAAa,CAACP,KAAD,EAAQE,OAAR,CAArB;;AACA,UAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdJ,QAAAA,KAAK,CAACY,EAAN;AACH;;AACDhB,MAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeV,KAAf,CAA7B;AACA,gCAAWA,KAAX;;AACJ;AACI,gCAAWA,KAAX;AArBR;AAuBH,CA1BD;;AA4BA,IAAIO,aAAa,GAAG,SAAhBA,aAAgB,CAACR,IAAD,EAAOG,OAAP,EAAmB;AACnC,MAAIE,KAAK,GAAG,CAAC,CAAb;;AACA,OAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,IAAI,CAACe,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,QAAId,IAAI,CAACc,CAAD,CAAJ,CAAQX,OAAR,CAAgBa,EAAhB,KAAuBb,OAAO,CAACa,EAAnC,EAAuC;AACnCX,MAAAA,KAAK,GAAGS,CAAR;AACH;AACJ;;AACD,SAAOT,KAAP;AACH,CARD;;AAUA,eAAeL,IAAf","sourcesContent":["import * as types from './../constants/ActionType';\r\n\r\nvar data = JSON.parse(localStorage.getItem('CART'));\r\nvar initialState = data ? data : [];\r\n\r\nconst cart = (state = initialState, action) => {\r\n    var { product, quantity } = action;\r\n    var index = -1;\r\n    switch (action.type) {\r\n        case types.ADD_TO_CART:\r\n            index = findProductID(state, product);\r\n            if (index !== -1) {\r\n                state[index].quantity += quantity;\r\n            } else {\r\n                state.push({\r\n                    product,\r\n                    quantity\r\n                })\r\n            }\r\n            localStorage.setItem('CART', JSON.stringify(state))\r\n            return [...state];\r\n        case types.DELETE_PRODUCT_IN_CART:\r\n            index = findProductID(state, product);\r\n            if (index !== -1) {\r\n                state.sp\r\n            }\r\n            localStorage.setItem('CART', JSON.stringify(state))\r\n            return [...state];\r\n        default:\r\n            return [...state];\r\n    }\r\n}\r\n\r\nvar findProductID = (cart, product) => {\r\n    var index = -1;\r\n    for (var i = 0; i < cart.length; i++) {\r\n        if (cart[i].product.id === product.id) {\r\n            index = i;\r\n        }\r\n    }\r\n    return index;\r\n}\r\n\r\nexport default cart;"]},"metadata":{},"sourceType":"module"}