{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Bao\\\\Desktop\\\\reactjs\\\\04_cart-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Bao\\\\Desktop\\\\reactjs\\\\04_cart-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Bao\\\\Desktop\\\\reactjs\\\\04_cart-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Bao\\\\Desktop\\\\reactjs\\\\04_cart-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Bao\\\\Desktop\\\\reactjs\\\\04_cart-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Bao\\\\Desktop\\\\reactjs\\\\04_cart-redux\\\\src\\\\containers\\\\CartContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Cart from './../components/Cart';\nimport CartItem from '../components/CartItem';\nimport CartResult from '../components/CartResult';\nimport { actDeleteProductInCart, actChangeMessage, actUpdateProductInCart } from '../actions';\nimport * as Message from './../constants/Message';\n\nvar CartContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CartContainer, _Component);\n\n  function CartContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CartContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CartContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.showCartItem = function (cart) {\n      var _this$props = _this.props,\n          onDeleteProductInCart = _this$props.onDeleteProductInCart,\n          onChangeMessage = _this$props.onChangeMessage,\n          onUpdateProductInCart = _this$props.onUpdateProductInCart;\n      var result = React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, Message.MSG_CART_EMPTY));\n\n      if (cart.length > 0) {\n        result = cart.map(function (item, index) {\n          return React.createElement(CartItem, {\n            key: index,\n            index: index,\n            item: item,\n            onDeleteProductInCart: onDeleteProductInCart,\n            onChangeMessage: onChangeMessage,\n            onUpdateProductInCart: onUpdateProductInCart,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          });\n        });\n      }\n\n      return result;\n    };\n\n    _this.showTotalAmount = function (cart) {\n      var result = null;\n\n      if (cart.length > 0) {\n        result = React.createElement(CartResult, {\n          cart: cart,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        });\n      }\n\n      return result;\n    };\n\n    return _this;\n  }\n\n  _createClass(CartContainer, [{\n    key: \"render\",\n    value: function render() {\n      var cart = this.props.cart;\n      return React.createElement(Cart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, this.showCartItem(cart), this.showTotalAmount(cart));\n    }\n  }]);\n\n  return CartContainer;\n}(Component);\n\nCartContainer.propTypes = {\n  cart: PropTypes.arrayOf(PropTypes.shape({\n    product: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired\n    }).isRequired,\n    quantity: PropTypes.number.isRequired\n  })).isRequired,\n  onDeleteProductInCart: Pro\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cart: state.cart\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    onDeleteProductInCart: function onDeleteProductInCart(product) {\n      dispatch(actDeleteProductInCart(product));\n    },\n    onChangeMessage: function onChangeMessage(message) {\n      dispatch(actChangeMessage(message));\n    },\n    onUpdateProductInCart: function onUpdateProductInCart(product, quantity) {\n      dispatch(actUpdateProductInCart(product, quantity));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);","map":{"version":3,"sources":["C:\\Users\\Bao\\Desktop\\reactjs\\04_cart-redux\\src\\containers\\CartContainer.js"],"names":["React","Component","connect","PropTypes","Cart","CartItem","CartResult","actDeleteProductInCart","actChangeMessage","actUpdateProductInCart","Message","CartContainer","showCartItem","cart","props","onDeleteProductInCart","onChangeMessage","onUpdateProductInCart","result","MSG_CART_EMPTY","length","map","item","index","showTotalAmount","propTypes","arrayOf","shape","product","id","number","isRequired","name","string","image","description","price","inventory","rating","quantity","Pro","mapStateToProps","state","mapDispatchToProps","dispatch","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Cart from './../components/Cart';\r\nimport CartItem from '../components/CartItem';\r\nimport CartResult from '../components/CartResult';\r\nimport { actDeleteProductInCart, actChangeMessage, actUpdateProductInCart } from '../actions';\r\nimport * as Message from './../constants/Message';\r\n\r\nclass CartContainer extends Component {\r\n    render() {\r\n        var { cart } = this.props;\r\n        return (\r\n            <Cart>\r\n                {this.showCartItem(cart)}\r\n                {this.showTotalAmount(cart)}\r\n            </Cart>\r\n        );\r\n    }\r\n\r\n    showCartItem = (cart) => {\r\n        var { onDeleteProductInCart, onChangeMessage, onUpdateProductInCart } = this.props;\r\n        var result = <tr>\r\n            <td>{Message.MSG_CART_EMPTY}</td>\r\n        </tr>;\r\n        if (cart.length > 0) {\r\n            result = cart.map((item, index) => {\r\n                return (\r\n                    <CartItem key={index} index={index} item={item} onDeleteProductInCart={onDeleteProductInCart} onChangeMessage={onChangeMessage} \r\n                    onUpdateProductInCart={onUpdateProductInCart}/>\r\n                );\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    showTotalAmount = (cart) => {\r\n        var result = null\r\n        if (cart.length > 0) {\r\n            result = <CartResult cart={cart} />\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nCartContainer.propTypes = {\r\n    cart: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            product: PropTypes.shape({\r\n                id: PropTypes.number.isRequired,\r\n                name: PropTypes.string.isRequired,\r\n                image: PropTypes.string.isRequired,\r\n                description: PropTypes.string.isRequired,\r\n                price: PropTypes.number.isRequired,\r\n                inventory: PropTypes.number.isRequired,\r\n                rating: PropTypes.number.isRequired,\r\n            }).isRequired,\r\n            quantity: PropTypes.number.isRequired\r\n        })\r\n    ).isRequired,\r\n    onDeleteProductInCart : Pro\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cart: state.cart\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onDeleteProductInCart: (product) => {\r\n            dispatch(actDeleteProductInCart(product))\r\n        },\r\n        onChangeMessage: (message) => {\r\n            dispatch(actChangeMessage(message))\r\n        },\r\n        onUpdateProductInCart : (product, quantity) => {\r\n            dispatch(actUpdateProductInCart(product,quantity))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);\r\n"]},"metadata":{},"sourceType":"module"}